/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cc4p1.snake.ui;

import cc4p1.snake.client.GameClient;
import cc4p1.snake.server.ServerMain;
import java.net.Inet4Address;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/**
 *
 * @author Albert
 */
public class GameWindow extends javax.swing.JFrame implements IBoardUpdater{
    private GameClient localClient;
    private boolean serverStarted = false;
    private boolean connected = false;
    
    /**
     * Creates new form GameWindowClient
     */
    public GameWindow() {
        initComponents();
    }
    
    public void updateBoard(String boardText) {
        SwingUtilities.invokeLater(() -> Board.setText(boardText));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Board = new javax.swing.JTextArea();
        UpBtn = new javax.swing.JButton();
        LeftBtn = new javax.swing.JButton();
        RightBtn = new javax.swing.JButton();
        DownBtn = new javax.swing.JButton();
        StartServerBtn = new javax.swing.JButton();
        ConnectBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Board.setEditable(false);
        Board.setColumns(20);
        Board.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        Board.setRows(5);
        jScrollPane1.setViewportView(Board);

        UpBtn.setText("^");
        UpBtn.setFocusPainted(false);
        UpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpBtnActionPerformed(evt);
            }
        });

        LeftBtn.setText("<");
        LeftBtn.setFocusPainted(false);
        LeftBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftBtnActionPerformed(evt);
            }
        });

        RightBtn.setText(">");
        RightBtn.setFocusPainted(false);
        RightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightBtnActionPerformed(evt);
            }
        });

        DownBtn.setText("v");
        DownBtn.setFocusPainted(false);
        DownBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownBtnActionPerformed(evt);
            }
        });

        StartServerBtn.setText("START SERVER");
        StartServerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartServerBtnActionPerformed(evt);
            }
        });

        ConnectBtn.setText("CONNECT");
        ConnectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(LeftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(RightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(DownBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(UpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)))
                    .addComponent(StartServerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConnectBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(36, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StartServerBtn)
                        .addGap(18, 18, 18)
                        .addComponent(ConnectBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UpBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RightBtn)
                            .addComponent(LeftBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DownBtn)
                        .addGap(64, 64, 64))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartServerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartServerBtnActionPerformed
        // TODO add your handling code here:
        try {
            int port = 5000;
            
            ServerMain.startServer(port);
            serverStarted = true;
            StartServerBtn.setEnabled(false);
            
            Board.setText("Servidor iniciado en puerto " + port + "\nEsperando jugadores...");
        } catch (Exception e) {
            return;
        }
    }//GEN-LAST:event_StartServerBtnActionPerformed

    private void UpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpBtnActionPerformed
        // TODO add your handling code here:
        if (connected && localClient != null) {
            localClient.sendDirection("UP");
            Board.requestFocus();
        }
    }//GEN-LAST:event_UpBtnActionPerformed

    private void RightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightBtnActionPerformed
        // TODO add your handling code here:
        if (connected && localClient != null) {
            localClient.sendDirection("RIGHT");
            Board.requestFocus();
        }
    }//GEN-LAST:event_RightBtnActionPerformed

    private void DownBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownBtnActionPerformed
        // TODO add your handling code here:
        if (connected && localClient != null) {
            localClient.sendDirection("DOWN");
            Board.requestFocus();
        }
    }//GEN-LAST:event_DownBtnActionPerformed

    private void ConnectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectBtnActionPerformed
        // TODO add your handling code here:
        if (!serverStarted) {
            return;
        }
        
        String host;
        try {
            host = Inet4Address.getLocalHost().getHostAddress();
        } catch (UnknownHostException ex) {
            Logger.getLogger(GameWindow.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        int port = 5000;
        
        try {            
            // Esperar un momento para que el servidor est√© listo
            Thread.sleep(500);
            
            localClient = new GameClient(host, port, this);
            localClient.start();
            localClient.sendJoin("Server");
            
            connected = true;
          
            Board.requestFocus();
            
        } catch (Exception e) {
            return;
        }
    }//GEN-LAST:event_ConnectBtnActionPerformed

    private void LeftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftBtnActionPerformed
        // TODO add your handling code here:
        if (connected && localClient != null) {
            localClient.sendDirection("LEFT");
            Board.requestFocus();
        }
    }//GEN-LAST:event_LeftBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Board;
    private javax.swing.JButton ConnectBtn;
    private javax.swing.JButton DownBtn;
    private javax.swing.JButton LeftBtn;
    private javax.swing.JButton RightBtn;
    private javax.swing.JButton StartServerBtn;
    private javax.swing.JButton UpBtn;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
